version: 2
jobs:
  build:
    working_directory: ~/myapp

    docker:
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          BUNDLER_VERSION: 2.1.4
          RAILS_ENV: test
          MYSQL_HOST: 127.0.0.1
          MYSQL_USERNAME: 'root'
          MYSQL_PASSWORD: ''
          MYSQL_PORT: 3306

      - image: circleci/mysql:5.7
        environment:
          MYSQL_DATABASE: The_Trip_Tip_test
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_HOST: '%'

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-

      - run:
          name: default mysql client install
          command: |
            sudo apt update
            sudo apt-get install default-mysql-client

      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.1.4
            bundle install --jobs=4 --retry=3 --path vendor/bundle
            yarn install --check-files

      - save_cache:
          paths:
            - ./vendor/bundle
            - node_modules
          key: app-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: 'wait for db'
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 3m

      - run: rm ./config/database.yml
      - run: mv ./config/database.yml.ci ./config/database.yml

      # - run: bundle exec rake db:create
      # - run: bundle exec rake db:schema:load

      - run: bundle exec bin/webpack

      - run:
          name: run rubocop
          command: bundle exec rubocop

      - run:
          name: run rspec
          command: bundle exec rspec

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - add_ssh_keys:
          fingerprints:
            - '54:a5:fa:1d:c5:01:11:0d:65:f8:3b:85:7c:c3:06:26'
      - deploy:
          name: Capistrano deploy
          command: bundle exec cap production deploy
